// Printing element of Doubly Linked list in reverse order

#include <iostream>

using namespace std;

struct Node
{
    int data;
    Node* next;
    Node* prev;
};

struct Node* head = NULL;

struct Node* getnewnode(int new_data)
{
    struct Node* new_node = new Node;
    new_node -> data = new_data;
    new_node -> next = NULL;
    new_node -> prev = NULL;
    return new_node;
}

void InsertatHead(int x)
{
    struct Node* Newnode = getnewnode(x);
    if (head == NULL)
    {
     head = Newnode;
     return;
    }
    head -> prev = Newnode;
    Newnode -> next = head;
    head = Newnode;
}

void reverse()
{
    struct Node* ptr = head;
    if (ptr == NULL)
    {
        return;
    }
    ptr = ptr -> next;
    
    while(ptr -> next != NULL)
    {
        ptr = ptr -> next;
    }
    while (ptr != NULL)
    {
        cout<<ptr-> data<<" ";
        ptr = ptr -> prev;
    }
}

void display()
{
    Node* ptr = head;
    while(ptr != NULL)
    {
        cout<<ptr -> data<<" ";
        ptr = ptr -> next;
        
    }
}

int main()
{
    InsertatHead(3);
    InsertatHead(5);
    InsertatHead(4);
    cout<<"The linked list is : ";
    display();
    cout<<endl;
    cout<<"The reverse List is : ";
    reverse();
    cout<<endl;

    return 0;
}
